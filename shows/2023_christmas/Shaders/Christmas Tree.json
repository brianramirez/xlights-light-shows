{"working":false,"featured":false,"private":false,"stars":["6038fd87df59c70014cdc588","60c1b13cdf59c70014cdc6d6","616675d6063978001a1c6f4c","61931165f4fe08001a0a62fe","62fba7a8ad0a68001afa5860","6364f0d524251a001abc94c3"],"images":[],"categories":["5e7a82fdda37220013c9c328"],"publicCategories":[],"privateCategories":["generator"],"_id":"604c19cdd4849b0013135d43","title":"Christmas Tree","rawFragmentSource":"/*\n\t{\n\t\"DESCRIPTION\": \"Christmas Tree\",\n\t\"CATEGORIES\": \n\t\t[\n\t\t\"generator\"\n\t\t],\n\t\"ISFVSN\": \"2\",\n\t\"CREDIT\": \"ISF Import by: Old Salt\",\n\t\"VSN\": \"1.0\",\n\t\"INPUTS\":\n\t\t[\n\t\t\t{\n\t\t\t\"NAME\": \"uC1\",\n\t\t\t\"TYPE\": \"color\",\n\t\t\t\"DEFAULT\":[0.0,1.0,0.0,1.0]\n\t\t\t},\n\t\t\t{\n\t\t\t\"NAME\": \"uC2\",\n\t\t\t\"TYPE\": \"color\",\n\t\t\t\"DEFAULT\":[0.0,0.0,1.0,1.0]\n\t\t\t},\n\t\t\t{\n\t\t\t\"NAME\": \"uC3\",\n\t\t\t\"TYPE\": \"color\",\n\t\t\t\"DEFAULT\":[1.0,0.0,0.0,1.0]\n\t\t\t},\n\t\t\t{\n\t\t\t\"LABEL\": \"Offset: \",\n\t\t\t\"NAME\": \"uOffset\",\n\t\t\t\"TYPE\": \"point2D\",\n\t\t\t\"MAX\": [1.0,1.0],\n\t\t\t\"MIN\": [-1.0,-1.0],\n\t\t\t\"DEFAULT\": [0.0,0.0]\n\t\t\t},\n\t\t\t{\n\t\t\t\"LABEL\": \"Zoom: \",\n\t\t\t\"NAME\": \"uZoom\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MAX\": 10.0,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"DEFAULT\": 1.0\n\t\t\t},\n\t\t\t{\n\t\t\t\"LABEL\": \"Rotation(or R Speed):\",\n\t\t\t\"NAME\": \"uRotate\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MAX\": 180.0,\n\t\t\t\"MIN\": -180.0,\n\t\t\t\"DEFAULT\": 0.0\n\t\t\t},\n\t\t\t{\n\t\t\t\"LABEL\": \"Continuous Rotation? \",\n\t\t\t\"NAME\": \"uContRot\",\n\t\t\t\"TYPE\": \"bool\",\n\t\t\t\"DEFAULT\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\"LABEL\": \"Color Mode: \",\n\t\t\t\"LABELS\":\n\t\t\t\t[\n\t\t\t\t\"Shader Defaults \",\n\t\t\t\t\"Alternate Color Palette (3 used) \"\n\t\t\t\t],\n\t\t\t\"NAME\": \"uColMode\",\n\t\t\t\"TYPE\": \"long\",\n\t\t\t\"VALUES\": [0,1],\n\t\t\t\"DEFAULT\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\"LABEL\": \"Intensity: \",\n\t\t\t\"NAME\": \"uIntensity\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MAX\": 4.0,\n\t\t\t\"MIN\": 0,\n\t\t\t\"DEFAULT\": 1.0\n\t\t\t}\n\t\t]\n\t}\n*/\n// Import from: http://glslsandbox.com/e#71522.0\n\n#define PI 3.141592653589\n#define size 0.1e-4\n#define rotate2D(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n\n// Functions from import:\nfloat grow(vec2 uv,float growWidth,float filmWidth)\n\t{\n\tif(abs(uv.y) > growWidth)return 0.;\n\tfloat y = uv.y / growWidth;\n\tfloat d = abs(uv.x / filmWidth);\n\treturn sqrt(1. - y * y) / (d) * .1;\n\t}\n\nfloat star(vec2 uv,float growWidth,float filmWidth)\n\t{\n\tvec2 rotUV1 = mat2(\n\t\tcos(PI / 3.),-sin(PI / 3.),\n\t\tsin(PI / 3.),cos(PI / 3.)\n    ) * uv;\n\tvec2 rotUV2 = mat2(\n\t\tcos(PI / 3.),sin(PI / 3.),\n\t\t-sin(PI / 3.),cos(PI / 3.)\n\t) * uv;\n\treturn grow(uv,growWidth,filmWidth) + grow(rotUV1,growWidth,filmWidth) +grow(rotUV2,growWidth,filmWidth) ;\n\t}\n\nvec3 hsv2rgb(vec3 c)\n\t{\n\tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n\treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n\t}\n\nfloat lineDist(vec2 a, vec2 b, vec2 p)\n\t{\n\tvec2 v = a, w = b;\n\tfloat l2 = pow(distance(w, v), 2.);\n\tif(l2 == 0.0) return distance(p, v);\n\tfloat t = clamp(dot(p - v, w - v) / l2, 0., 1.);\n\tvec2 j = v + t * (w - v);\n\treturn distance(p, j);\n\t}\n\nvec3 addVertex(vec4 vertex, vec3 color, mat4 projMat, vec2 camUV)\n\t{\n\tvec4 p_proj1 = projMat * vertex;\n\tvec2 p = p_proj1.xy / p_proj1.z;\n\tfloat dist = length((camUV-vec2(.5))-p);\n\treturn color * star(camUV-vec2(.5)-p.xy,.01,.2);\n\t}\n\nvec3 addLine(vec4 vertex1, vec4 vertex2, vec3 color, mat4 projMat, vec2 camUV)\n\t{\n\tvec4 p_proj1 = projMat * vertex1;\n\tvec2 p1 = p_proj1.xy / p_proj1.z;\n\tvec4 p_proj2 = projMat * vertex2;\n\tvec2 p2 = p_proj2.xy / p_proj2.z;\n\tfloat dist = lineDist((camUV-vec2(.5))-p1, (camUV-vec2(.5))-p2, vec2(0., 0.0));\n\treturn color * 1. / pow(dist, 2.) * size;\n\t}\n\nvoid main()\n\t{\n\tvec2 uv = gl_FragCoord.xy/RENDERSIZE - 0.5; // normalize coordinates\n\tuv.x *= RENDERSIZE.x/RENDERSIZE.y;          // correct aspect ratio\n\tuv = (uv-uOffset) * 1.0/uZoom;              // zoom at original location, then offset result\n\tuv = uContRot ? uv*rotate2D(TIME*uRotate/36.0) : uv*rotate2D(uRotate*PI/180.0);\n\tuv.x *= RENDERSIZE.y/RENDERSIZE.x;\n  uv = (uv + 0.5)\t* RENDERSIZE;\t\t\t\t\t\t\t\t\n\n/**** Start of Imported Shader Code main() *****/\n\tuv = (uv - vec2(RENDERSIZE.x * 0.25, 0.0)) / RENDERSIZE.y;\n\t/**** Start of Core Imported Shader Code *****/\n\tfloat theta = TIME*0.2;\n\n\t// standard rotation matrix around Y axis.\n\tmat4 projMat = mat4(\n\t\tvec4(cos(theta), 0.0, sin(theta), 0.0),\n\t\tvec4(0.0, 1.0, 0.0, 0.0),\n\t\tvec4(-sin(theta), 0.0, cos(theta), 0.0),\n\t\tvec4(0.0, 0.0, 1.0, 0.0));\n\n\tvec3 imageColors = vec3(0.);\n\tvec3 green = vec3(0.0, 0.2, 0.);\n\tvec3 brown = vec3(0.5, 0.1, 0.);\n\tfloat height = .7;\n\tfloat width = .8;\n\tfloat trunkThickness = 0.05;\n\n\t// tree points\n\timageColors += addVertex(vec4(width * 0.0, -.3 + height * 1.0, 0., 1.), green, projMat, uv);\n\timageColors += addVertex(vec4(width * 0.12, -.3 + height * 0.8, 0., 1.), green, projMat, uv);\n\timageColors += addVertex(vec4(width * 0.02, -.3 + height * 0.8, 0., 1.), green, projMat, uv);\n\timageColors += addVertex(vec4(width * 0.24, -.3 + height * 0.5, 0., 1.), green, projMat, uv);\n\timageColors += addVertex(vec4(width * 0.08, -.3 + height * 0.5, 0., 1.), green, projMat, uv);\n\timageColors += addVertex(vec4(width * 0.36, -.3 + height * 0.2, 0., 1.), green, projMat, uv);\n\timageColors += addVertex(vec4(width * trunkThickness, -.3 + height * 0.2, 0., 1.), green, projMat, uv);\n\timageColors += addVertex(vec4(width * trunkThickness, -.3 + height * 0.0, 0., 1.), brown, projMat, uv);\n\timageColors += addVertex(vec4(-width * 0.12, -.3 + height * 0.8, 0., 1.), green, projMat, uv);\n\timageColors += addVertex(vec4(-width * 0.02, -.3 + height * 0.8, 0., 1.), green, projMat, uv);\n\timageColors += addVertex(vec4(-width * 0.24, -.3 + height * 0.5, 0., 1.), green, projMat, uv);\n\timageColors += addVertex(vec4(-width * 0.08, -.3 + height * 0.5, 0., 1.), green, projMat, uv);\n\timageColors += addVertex(vec4(-width * 0.36, -.3 + height * 0.2, 0., 1.), green, projMat, uv);\n\timageColors += addVertex(vec4(-width * trunkThickness, -.3 + height * 0.2, 0., 1.), green, projMat, uv);\n\timageColors += addVertex(vec4(-width * trunkThickness, -.3 + height * 0.0, 0., 1.), brown, projMat, uv);\n\n\t// light points\n\timageColors += addVertex(vec4(width * 0.02, -.3 + height * 0.85, 0., 1.), hsv2rgb(vec3(fract(TIME*0.05), 1., 1.)), projMat, uv);\n\timageColors += addVertex(vec4(-width * 0.05, -.3 + height * 0.65, 0., 1.), hsv2rgb(vec3(fract(TIME*0.071+.5), 1., 1.)), projMat, uv);\n\timageColors += addVertex(vec4(width * 0.07, -.3 + height * 0.58, 0., 1.), hsv2rgb(vec3(fract(TIME*0.066+.2), 1., 1.)), projMat, uv);\n\timageColors += addVertex(vec4(-width * 0.081, -.3 + height * 0.35, 0., 1.), hsv2rgb(vec3(fract(TIME*0.062+.25), 1., 1.)), projMat, uv);\n\timageColors += addVertex(vec4(width * 0.12, -.3 + height * 0.31, 0., 1.), hsv2rgb(vec3(fract(TIME*0.042+.87), 1., 1.)), projMat, uv);\n\n\t// tree outline connections\n\timageColors += addLine(vec4(width * 0.0, -.3 + height * 1.0, 0., 1.), vec4(width * 0.12, -.3 + height * 0.8, 0., 1.), green, projMat, uv);\n\timageColors += addLine(vec4(width * 0.12, -.3 + height * 0.8, 0., 1.), vec4(width * 0.02, -.3 + height * 0.8, 0., 1.), green, projMat, uv);\n\timageColors += addLine(vec4(width * 0.02, -.3 + height * 0.8, 0., 1.), vec4(width * 0.24, -.3 + height * 0.5, 0., 1.), green, projMat, uv);\n\timageColors += addLine(vec4(width * 0.24, -.3 + height * 0.5, 0., 1.), vec4(width * 0.08, -.3 + height * 0.5, 0., 1.), green, projMat, uv);\n\timageColors += addLine(vec4(width * 0.08, -.3 + height * 0.5, 0., 1.), vec4(width * 0.36, -.3 + height * 0.2, 0., 1.), green, projMat, uv);\n\timageColors += addLine(vec4(width * 0.36, -.3 + height * 0.2, 0., 1.), vec4(width * trunkThickness, -.3 + height * 0.2, 0., 1.), green, projMat, uv);\n\timageColors += addLine(vec4(width * trunkThickness, -.3 + height * 0.2, 0., 1.), vec4(width * trunkThickness, -.3 + height * 0.0, 0., 1.), brown, projMat, uv);\n\timageColors += addLine(vec4(-width * 0.0, -.3 + height * 1.0, 0., 1.), vec4(-width * 0.12, -.3 + height * 0.8, 0., 1.), green, projMat, uv);\n\timageColors += addLine(vec4(-width * 0.12, -.3 + height * 0.8, 0., 1.), vec4(-width * 0.02, -.3 + height * 0.8, 0., 1.), green, projMat, uv);\n\timageColors += addLine(vec4(-width * 0.02, -.3 + height * 0.8, 0., 1.), vec4(-width * 0.24, -.3 + height * 0.5, 0., 1.), green, projMat, uv);\n\timageColors += addLine(vec4(-width * 0.24, -.3 + height * 0.5, 0., 1.), vec4(-width * 0.08, -.3 + height * 0.5, 0., 1.), green, projMat, uv);\n\timageColors += addLine(vec4(-width * 0.08, -.3 + height * 0.5, 0., 1.), vec4(-width * 0.36, -.3 + height * 0.2, 0., 1.), green, projMat, uv);\n\timageColors += addLine(vec4(-width * 0.36, -.3 + height * 0.2, 0., 1.), vec4(-width * trunkThickness, -.3 + height * 0.2, 0., 1.), green, projMat, uv);\n\timageColors += addLine(vec4(-width * trunkThickness, -.3 + height * 0.2, 0., 1.), vec4(-width * trunkThickness, -.3 + height * 0.0, 0., 1.), brown, projMat, uv);\n\timageColors += addLine(vec4(width * trunkThickness, -.3 + height * 0.0, 0., 1.), vec4(-width * trunkThickness, -.3 + height * 0.0, 0., 1.), brown, projMat, uv);\n/****    End of Imported Shader main()     *****/\n\n\tvec4 cShad = vec4(imageColors, 1.0);  \n\tvec3 cOut = cShad.rgb;\n\tif (uColMode == 1)\n\t\t{\n\t\tcOut = uC1.rgb * cShad.r;\n\t\tcOut += uC2.rgb * cShad.g;\n\t\tcOut += uC3.rgb * cShad.b;\n\t\t}\n\tcOut = cOut * uIntensity;\n\tcOut = clamp(cOut, vec3(0.0), vec3(1.0));\n\tgl_FragColor = vec4(cOut.rgb,cShad.a);\n\t}\n\t","rawVertexSource":"\nvoid main() {\n  isf_vertShaderInit();\n}\n","description":"Christmas Tree","scale":1,"user":{"_id":"604b8fc8df59c70014cdc5fc","username":"Old_Salt","name":"Old Salt","id":"604b8fc8df59c70014cdc5fc"},"username":"Old_Salt","createdAt":"2021-03-13T01:47:57.616Z","updatedAt":"2022-11-04T15:35:33.057Z","__v":7,"thumbnailCloudinaryId":"kxspla63bxqwfwytkstk","id":"604c19cdd4849b0013135d43"}